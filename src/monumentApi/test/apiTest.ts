/* eslint @typescript-eslint/no-unused-vars: off */
/**
 * ua.culture.monuments.api.v1.TripApi
 * Auth Service
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ermakovsa03@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ArticleDTO,
    ArticleListDTO,
    Base64FileDTO,
    CoordinatesDTO,
    EmailDTO,
    HelpTypeDTO,
    MonumentDTO,
    MonumentLevelDTO,
    MonumentListDTO,
    MonumentOwnershipDTO,
    MonumentStatusDTO,
    MonumentTypeDTO,
    PersonHelpDTO,
    PhotoDTO,
    ReportedMonumentDTO,
} from "../model";

import {
    ApplicationApis,
    DefaultApiInterface,
} from "../api";

function reject(operation: string) {
    return () => Promise.reject(new Error("Unexpected function call " + operation));
}

export function mockApplicationApis({
    defaultApi = mockDefaultApi(),
}: Partial<ApplicationApis>): ApplicationApis {
    return { defaultApi };
}

export function mockDefaultApi(operations: {
    createArticle?: () => Promise<ArticleDTO>;
    createMonument?: () => Promise<MonumentDTO>;
    createReportedMonument?: () => Promise<ReportedMonumentDTO>;
    deleteArticle?: () => Promise<void>;
    deleteMonument?: () => Promise<void>;
    deleteMonumentPhoto?: () => Promise<void>;
    getArticle?: () => Promise<ArticleDTO>;
    getArticleList?: () => Promise<ArticleListDTO>;
    getMonument?: () => Promise<MonumentDTO>;
    getMonumentList?: () => Promise<MonumentListDTO>;
    getReportedMonument?: () => Promise<ReportedMonumentDTO>;
    saveEmail?: () => Promise<void>;
    savePersonHelp?: () => Promise<void>;
    updateArticle?: () => Promise<ArticleDTO>;
    updateMonument?: () => Promise<MonumentDTO>;
    uploadMonumentPhoto?: () => Promise<PhotoDTO>;
    uploadReportedMonumentPhoto?: () => Promise<PhotoDTO>;
} = {}): DefaultApiInterface {
    return {
        createArticle: operations.createArticle || reject("DefaultApi.createArticle"),
        createMonument: operations.createMonument || reject("DefaultApi.createMonument"),
        createReportedMonument: operations.createReportedMonument || reject("DefaultApi.createReportedMonument"),
        deleteArticle: operations.deleteArticle || reject("DefaultApi.deleteArticle"),
        deleteMonument: operations.deleteMonument || reject("DefaultApi.deleteMonument"),
        deleteMonumentPhoto: operations.deleteMonumentPhoto || reject("DefaultApi.deleteMonumentPhoto"),
        getArticle: operations.getArticle || reject("DefaultApi.getArticle"),
        getArticleList: operations.getArticleList || reject("DefaultApi.getArticleList"),
        getMonument: operations.getMonument || reject("DefaultApi.getMonument"),
        getMonumentList: operations.getMonumentList || reject("DefaultApi.getMonumentList"),
        getReportedMonument: operations.getReportedMonument || reject("DefaultApi.getReportedMonument"),
        saveEmail: operations.saveEmail || reject("DefaultApi.saveEmail"),
        savePersonHelp: operations.savePersonHelp || reject("DefaultApi.savePersonHelp"),
        updateArticle: operations.updateArticle || reject("DefaultApi.updateArticle"),
        updateMonument: operations.updateMonument || reject("DefaultApi.updateMonument"),
        uploadMonumentPhoto: operations.uploadMonumentPhoto || reject("DefaultApi.uploadMonumentPhoto"),
        uploadReportedMonumentPhoto: operations.uploadReportedMonumentPhoto || reject("DefaultApi.uploadReportedMonumentPhoto"),
    };
}
